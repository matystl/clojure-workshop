;; Analyzed by ClojureScript 0.0-3211
{:use-macros {go cljs.core.async.macros, dev-assert figwheel.client.utils, go-loop cljs.core.async.macros}, :excludes #{}, :name figwheel.client.file-reloading, :imports {}, :requires {guri goog.Uri, goog.string goog.string, loader goog.net.jsloader, async cljs.core.async, goog.net.jsloader goog.net.jsloader, goog.Uri goog.Uri, cljs.core.async cljs.core.async, clojure.set clojure.set, string clojure.string, figwheel.client.utils figwheel.client.utils, utils figwheel.client.utils, clojure.string clojure.string}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, alts! cljs.core.async, difference clojure.set, map< cljs.core.async, put! cljs.core.async}, :defs {add-link-to-doc {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([new-link] [orig-link klone]), :arglists ([new-link] [orig-link klone]), :arglists-meta (nil nil)}, :arglists (quote ([new-link] [orig-link klone])), :end-column 22, :end-line 291, :column 7, :line 291, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/add-link-to-doc, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([new-link] [orig-link klone]), :arglists ([new-link] [orig-link klone]), :arglists-meta (nil nil)}, :method-params ([new-link] [orig-link klone]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 291, :end-line 291, :max-fixed-arity 2, :fn-var true, :arglists ([new-link] [orig-link klone]), :test true}, matches-file? {:protocol-inline nil, :meta {:arglists (quote ([{:keys [file]} link])), :end-column 20, :end-line 252, :column 7, :line 252, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/matches-file?, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 20, :method-params ([p__30021 link]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 252, :end-line 252, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [file]} link])), :test true}, add-request-urls {:protocol-inline nil, :meta {:arglists (quote ([opts files])), :end-column 23, :end-line 171, :column 7, :line 171, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/add-request-urls, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 23, :method-params ([opts files]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 2, :fn-var true, :arglists (quote ([opts files])), :test true}, namespace-file-map? {:protocol-inline nil, :meta {:arglists (quote ([m])), :end-column 26, :end-line 27, :column 7, :line 27, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/namespace-file-map?, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 26, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m])), :test true}, current-links {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 20, :end-line 241, :column 7, :line 241, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/current-links, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, reload-css-files {:protocol-inline nil, :meta {:arglists (quote ([{:keys [on-cssload], :as opts} files-msg])), :end-column 23, :end-line 307, :column 7, :line 307, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/reload-css-files, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 23, :method-params ([p__30035 files-msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 307, :end-line 307, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [on-cssload], :as opts} files-msg])), :test true}, add-cache-buster {:protocol-inline nil, :meta {:arglists (quote ([url])), :end-column 23, :end-line 39, :column 7, :line 39, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/add-cache-buster, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 23, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :test true}, get-correct-link {:protocol-inline nil, :meta {:arglists (quote ([f-data])), :end-column 23, :end-line 268, :column 7, :line 268, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/get-correct-link, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 23, :method-params ([f-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 268, :end-line 268, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f-data])), :test true}, before-jsload-custom-event {:protocol-inline nil, :meta {:arglists (quote ([files])), :end-column 33, :end-line 21, :column 7, :line 21, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/before-jsload-custom-event, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 33, :method-params ([files]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([files])), :test true}, all? {:protocol-inline nil, :meta {:arglists (quote ([pred coll])), :end-column 11, :end-line 24, :column 7, :line 24, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/all?, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 11, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll])), :test true}, js-reload {:protocol-inline nil, :meta {:arglists (quote ([{:keys [request-url namespace], :as file-msg} callback])), :end-column 16, :end-line 135, :column 7, :line 135, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/js-reload, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 16, :method-params ([p__29454 callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [request-url namespace], :as file-msg} callback])), :test true}, truncate-url {:protocol-inline nil, :meta {:arglists (quote ([url])), :end-column 19, :end-line 245, :column 7, :line 245, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/truncate-url, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 19, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :test true}, ns-to-js-file {:protocol-inline nil, :meta {:arglists (quote ([ns])), :end-column 20, :end-line 43, :column 7, :line 43, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/ns-to-js-file, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 20, :method-params ([ns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ns])), :test true}, clone-link {:protocol-inline nil, :meta {:arglists (quote ([link url])), :end-column 17, :end-line 277, :column 7, :line 277, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/clone-link, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 17, :method-params ([link url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 277, :end-line 277, :max-fixed-arity 2, :fn-var true, :arglists (quote ([link url])), :test true}, add-request-url {:protocol-inline nil, :meta {:arglists (quote ([{:keys [url-rewriter], :as opts} {:keys [file], :as file-msg}])), :end-column 22, :end-line 164, :column 7, :line 164, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/add-request-url, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 22, :method-params ([p__29552 p__29553]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [url-rewriter], :as opts} {:keys [file], :as file-msg}])), :test true}, reload-base {:meta {:end-column 22, :end-line 80, :column 11, :line 80, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :line 80, :column 1, :end-line 80, :end-column 22, :test true, :name figwheel.client.file-reloading/reload-base}, patch-goog-base {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 22, :end-line 53, :column 7, :line 53, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/patch-goog-base, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, reload-file? {:protocol-inline nil, :meta {:arglists (quote ([{:keys [namespace meta-data], :as file-msg}])), :end-column 19, :end-line 120, :column 7, :line 120, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/reload-file?, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 19, :method-params ([p__29451]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [namespace meta-data], :as file-msg}])), :test true}, on-jsload-custom-event {:protocol-inline nil, :meta {:arglists (quote ([url])), :end-column 29, :end-line 18, :column 7, :line 18, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/on-jsload-custom-event, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 29, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :test true}, reload-css-file {:protocol-inline nil, :meta {:arglists (quote ([{:keys [file request-url], :as f-data}])), :end-column 22, :end-line 302, :column 7, :line 302, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/reload-css-file, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 22, :method-params ([p__30032]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 302, :end-line 302, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [file request-url], :as f-data}])), :test true}, resolve-url {:meta {:end-column 22, :end-line 72, :column 11, :line 72, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :line 72, :column 1, :end-line 72, :end-column 22, :test true, :name figwheel.client.file-reloading/resolve-url}, resolve-ns {:protocol-inline nil, :meta {:arglists (quote ([ns])), :end-column 17, :end-line 47, :column 7, :line 47, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/resolve-ns, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 17, :method-params ([ns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ns])), :test true}, reload-js-file {:protocol-inline nil, :meta {:arglists (quote ([file-msg])), :end-column 21, :end-line 143, :column 7, :line 143, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/reload-js-file, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 21, :method-params ([file-msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([file-msg])), :test true}, eval-body {:protocol-inline nil, :meta {:arglists (quote ([{:keys [eval-body file]}])), :end-column 16, :end-line 174, :column 7, :line 174, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/eval-body, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 16, :method-params ([p__29558]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 174, :end-line 174, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [eval-body file]}])), :test true}, load-all-js-files {:protocol-inline nil, :meta {:arglists (quote ([files])), :doc "Returns a chanel with one collection of loaded filenames on it.", :end-column 24, :end-line 151, :column 7, :line 151, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/load-all-js-files, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 24, :method-params ([files]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 151, :end-line 151, :max-fixed-arity 1, :fn-var true, :arglists (quote ([files])), :doc "Returns a chanel with one collection of loaded filenames on it.", :test true}, reload-file* {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([request-url callback] [request-url]), :arglists ([request-url callback] [request-url]), :arglists-meta (nil nil)}, :arglists (quote ([request-url callback] [request-url])), :end-column 19, :end-line 101, :column 7, :line 101, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/reload-file*, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([request-url callback] [request-url]), :arglists ([request-url callback] [request-url]), :arglists-meta (nil nil)}, :method-params ([request-url callback] [request-url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 2, :fn-var true, :arglists ([request-url callback] [request-url]), :test true}, create-link {:protocol-inline nil, :meta {:arglists (quote ([url])), :end-column 18, :end-line 285, :column 7, :line 285, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/create-link, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 18, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 285, :end-line 285, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :test true}, reload-js-files {:protocol-inline nil, :meta {:arglists (quote ([{:keys [before-jsload on-jsload load-unchanged-files], :as opts} {:keys [files], :as msg}])), :end-column 22, :end-line 183, :column 7, :line 183, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/reload-js-files, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 22, :method-params ([p__29567 p__29568]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [before-jsload on-jsload load-unchanged-files], :as opts} {:keys [files], :as msg}])), :test true}, reload-file {:protocol-inline nil, :meta {:arglists (quote ([{:keys [request-url], :as file-msg} callback])), :end-column 18, :end-line 105, :column 7, :line 105, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/reload-file, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 18, :method-params ([p__29448 callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [request-url], :as file-msg} callback])), :test true}}, :require-macros {utils figwheel.client.utils, figwheel.client.utils figwheel.client.utils, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:namespace :file :type :hierarchy :default :node :error :else :html :request-url :loaded-file :meta-data :figwheel-no-load :figwheel-always :figwheel-load :file-changed-on-disk :recur :url-rewriter :eval-body :load-unchanged-files :on-jsload :before-jsload :files :debug :not-required :link :link-href :match-length :current-url-length :on-cssload], :seen #{:load-unchanged-files :request-url :else :on-jsload :default :file :meta-data :figwheel-always :recur :type :debug :figwheel-no-load :node :loaded-file :current-url-length :link :eval-body :files :not-required :figwheel-load :before-jsload :error :hierarchy :namespace :file-changed-on-disk :match-length :link-href :url-rewriter :on-cssload :html}}, :doc nil}