;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name example.views, :imports nil, :requires {re-frame.core re-frame.core, re-frame re-frame.core}, :uses nil, :defs {comp-with-state {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 22, :end-line 18, :column 7, :line 18, :file "/home/maty/vacuumlabs/clojurescript/example/src/cljs/example/views.cljs"}, :name example.views/comp-with-state, :variadic false, :file "src/cljs/example/views.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, my-first-component {:protocol-inline nil, :meta {:arglists (quote ([{:keys [name address]}])), :end-column 25, :end-line 14, :column 7, :line 14, :file "/home/maty/vacuumlabs/clojurescript/example/src/cljs/example/views.cljs"}, :name example.views/my-first-component, :variadic false, :file "src/cljs/example/views.cljs", :end-column 25, :method-params ([p__21520]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [name address]}])), :test true}, counter {:protocol-inline nil, :meta {:arglists (quote ([state-from-props])), :end-column 14, :end-line 10, :column 7, :line 10, :file "/home/maty/vacuumlabs/clojurescript/example/src/cljs/example/views.cljs"}, :name example.views/counter, :variadic false, :file "src/cljs/example/views.cljs", :end-column 14, :method-params ([state-from-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state-from-props])), :test true}, main-panel {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 17, :end-line 4, :column 7, :line 4, :file "/home/maty/vacuumlabs/clojurescript/example/src/cljs/example/views.cljs"}, :name example.views/main-panel, :variadic false, :file "src/cljs/example/views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:name :div :address :counter :button :on-click :inc-counter-by], :seen #{:address :inc-counter-by :button :name :on-click :div :counter}}, :doc nil}