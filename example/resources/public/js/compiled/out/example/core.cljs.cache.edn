;; Analyzed by ClojureScript 0.0-3211
{:use-macros {reaction reagent.ratom}, :excludes #{}, :name example.core, :imports nil, :requires {views example.views, example.views example.views, example.subs example.subs, example.handlers example.handlers, re-frame re-frame.core, re-frame.core re-frame.core, reagent.core reagent.core, reagent reagent.core}, :uses nil, :defs {init {:protocol-inline nil, :meta {:arglists (quote ([])), :export true, :end-column 20, :end-line 19, :column 16, :line 19, :file "/home/maty/vacuumlabs/clojurescript/example/src/cljs/example/core.cljs"}, :name example.core/init, :variadic false, :file "src/cljs/example/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, mount-root {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 17, :end-line 15, :column 7, :line 15, :file "/home/maty/vacuumlabs/clojurescript/example/src/cljs/example/core.cljs"}, :name example.core/mount-root, :variadic false, :file "src/cljs/example/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, whole-db-dont-use {:meta {:end-column 23, :end-line 10, :column 6, :line 10, :file "/home/maty/vacuumlabs/clojurescript/example/src/cljs/example/core.cljs"}, :file "src/cljs/example/core.cljs", :line 10, :column 1, :end-line 10, :end-column 23, :test true, :name example.core/whole-db-dont-use}}, :require-macros {reagent.ratom reagent.ratom}, :cljs.analyzer/constants {:order [:whole-db-dont-use :initialize-db], :seen #{:initialize-db :whole-db-dont-use}}, :doc nil}