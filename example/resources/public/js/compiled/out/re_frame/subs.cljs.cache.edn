;; Analyzed by ClojureScript 0.0-3211
{:defs {subscribe {:protocol-inline nil, :meta {:arglists (quote ([v])), :doc "Returns a reagent/reaction which observes a part of app-db", :end-column 16, :end-line 26, :column 7, :line 26, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/re_frame/subs.cljs"}, :name re-frame.subs/subscribe, :variadic false, :file "resources/public/js/compiled/out/re_frame/subs.cljs", :end-column 16, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "Returns a reagent/reaction which observes a part of app-db", :test true}, register {:protocol-inline nil, :meta {:arglists (quote ([key-v handler-fn])), :doc "Registers a handler function for an id", :end-column 15, :end-line 18, :column 7, :line 18, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/re_frame/subs.cljs"}, :name re-frame.subs/register, :variadic false, :file "resources/public/js/compiled/out/re_frame/subs.cljs", :end-column 15, :method-params ([key-v handler-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([key-v handler-fn])), :doc "Registers a handler function for an id", :test true}, clear-handlers! {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Unregisters all subscription handlers", :end-column 22, :end-line 12, :column 7, :line 12, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/re_frame/subs.cljs"}, :name re-frame.subs/clear-handlers!, :variadic false, :file "resources/public/js/compiled/out/re_frame/subs.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Unregisters all subscription handlers", :test true}, key->fn {:meta {:private true, :end-column 23, :end-line 9, :column 16, :line 9, :file "/home/maty/vacuumlabs/clojurescript/example/resources/public/js/compiled/out/re_frame/subs.cljs"}, :file "resources/public/js/compiled/out/re_frame/subs.cljs", :line 9, :column 1, :end-line 9, :end-column 23, :private true, :test true, :name re-frame.subs/key->fn}}, :imports nil, :requires {re-frame.utils re-frame.utils, re-frame.db re-frame.db, reagent.ratom reagent.ratom}, :uses {app-db re-frame.db, warn re-frame.utils, make-reaction reagent.ratom, first-in-vector re-frame.utils, error re-frame.utils}, :require-macros nil, :use-macros nil, :excludes #{}, :doc nil, :name re-frame.subs}